#!/bin/sh
# TODO : add option to find on which remote is connected serial

PROGNAME=${0##*/}
PROGVERSION="0.0.1"

REMOTE=""
LOGFILE=""
LIST="no"

print_usage(){
	cat << EOF

USAGE:
$(basename $0) [OPTIONS] <pim-serial|ttyUSB-number>

OPTIONS:
	-h | --help ............ Display this message
	-l | --list ............ List available serial devices
	-L | --log FILE ........ Log session to file
	-r | --remote REMOTE ... remote machine on which the PIM is connected

EOF
exit 1
}

#Parsing arguments ###################
set_option_defaults() {
	VERBOSE="no"
	COMMAND="help"
}

set_option_defaults
SHORTOPTS="hvVr:lL:"
LONGOPTS="help,verbose,version,remote:list,log:"

ARGS=$(getopt -s bash --options $SHORTOPTS  \
	--longoptions $LONGOPTS --name $PROGNAME -- "$@" )

eval set -- "$ARGS"
while true; do
	case $1 in
		-h|--help) print_usage;;
		-v|--verbose) VERBOSE="yes";;
		-V|--version) echo "$PROGVERSION"; exit 0 ;;
		-r|--remote) REMOTE="$2"; shift ;;
		-l|--list) LIST="yes" ;;
		-L|--log) LOGFILE="$2"; shift ;;
		--)	shift; break;;
		*) shift; break	;;
	esac
	shift
done

if [ "$LIST" == "yes" ]; then
	CMD="lq"
elif [ -n "$(echo $1 | grep -Eo "^[0-9]{4}?")" ]; then
	CMD="picocom -b 115200 -l /dev/serial/by-id/usb-Xiphos_Systems_Corp._Q7-PIM_${1}-if00-port0"
elif [ -n "$1" ]; then
	CMD="picocom -b 115200 -l /dev/ttyUSB${1}"
else
	print_usage
fi

if [ -n "$LOGFILE" ]; then
	CMD="$CMD | tee $LOGFILE "
fi

case "$REMOTE" in
	kk)
		ssh -t kingkong-ubuntu "$CMD"
		;;
	"")
		$CMD
		;;
	*)
		ssh -t "$REMOTE" "$CMD"
		;;
esac

# vim: cc=80 tw=100 sw=4 ts=4:
