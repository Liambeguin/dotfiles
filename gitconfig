[user]
	email  = liambeguin@gmail.com
	name   = Liam Beguin
	editor = vi
	whitespace = blank-at-eol,indent-with-non-tab,trailing-space

[gui]
	fontui   = -family \"Terminess Powerline\" -size 12 -weight normal -underline 0 -overstrike 0
	fontdiff = -family \"Terminess Powerline\" -size 12 -weight normal -underline 0 -overstrike 0
	warndetachedcommit = true
	spellingdictionary = none

[help]
	autocorrect = 1

[push]
	default = matching

[log]
	decorate = true

[merge]
	tool = meld

[mergetool "meld"]
	keepBackup = false
	prompt = false

[color]
	ui     = true
	status = auto
	grep   = auto
	branch = auto

# Use about the same colors as usual grep
[color "grep"]
	context    = normal
	filename   = magenta
	function   = black bold
	linenumber = green
	match      = red bold
	selected   = normal
	separator  = cyan

[color "branch"]
	current = green
	remote  = red
	local   = normal

[grep]
	lineNumber = true

[column]
	ui = never

[alias]
	graph = log --all --oneline --decorate --graph
	st    = status
	mt    = mergetool
	ba    = branch --all --verbose
	rv    = remote --verbose
	lo    = log --all --oneline --decorate
	last  = log -n1
	k     = "!gitk"
	info  = "!\
		echo; sh -c \"git branch -vla ; \
		echo; git remote -v\"; echo"
	# Open git blame in vim (requires vim-fugitive)
	bl    = "!sh --login -c \"vi +Gblame $@\" "

	# Count number of commits since branching from $1
	count = "!\
		f() { \
		base_branch=${1-master}; \
		echo counting against: $base_branch >/dev/stderr; \
		git rev-list --count HEAD ^${base_branch}; \
		}; f"

	# Interactively rebase changes since branching from $1
	squashbase = "!\
		f() {\
		base_branch=${1-master}; \
		count=$(git count ${base_branch}); \
		usleep 200000; \
		git rebase -i HEAD~${count}; \
		}; f"

# vim: ft=gitconfig
