#!/bin/bash


BOOKMARKS="${HOME}/.bookmarks"
[ ! -f $BOOKMARKS ] && touch $BOOKMARKS

error() {
    echo ERROR: $*
}

usage() {
    cat << EOF
USAGE:
    xcd help ................... Display this message
    xcd add bookmark path ...... Add path as a bookmark
    xcd rm  bookmark ........... Rm bookmark
    xcd edit ................... Edit bookmarks
    xcd bookmark ............... Goto to bookmark (cd)
                                 if no bookmark is passed default is used

EOF
}

do_add() {
    local bookmark_name="$1"
    local bookmark_path="$2"
    if [ -z "$bookmark_name" ]; then
        error "No name given..."
    elif [ -z "$bookmark_path" ]; then
        error "No path given..."
    elif [ -n "$(grep -Eo "^$bookmark_name:" "$BOOKMARKS")" ]; then
        error "Bookmark already registered !"
    else
        echo "${bookmark_name}:${bookmark_path}" >> "$BOOKMARKS"
        echo "Added $bookmark_name !"
    fi
}
do_rm() {
    local bookmark_name="$1"
    sed -i "/^$bookmark_name:/d" "$BOOKMARKS"
}
do_xcd() {
    local bookmark_name="$1"
    local bookmark_path="$(grep -E "^${bookmark_name}:" $BOOKMARKS | cut -d':' -f2)"
    cd $bookmark_path
}

do_complete() {

    local bookmarks="$(cat $BOOKMARKS | grep -v '^#' | cut -d':' -f1)"
    local cmds="edit add rm print help"
    local comp="$bookmarks $cmds"

    COMPREPLY=()
    if [ $COMP_CWORD = 1 ]; then
        COMPREPLY=(`compgen -W "$comp" -- $2`)
    fi
}



xcd() {
    case "$1" in
        "add"|"a")   do_add "$2" "$3";;
        "rm"|"r")    do_rm  "$2" ;;
        "edit"|"e")  $EDITOR $BOOKMARKS ;;
        "print"|"p") cat $BOOKMARKS | column -t -s: ;;
        "-h"|"help"|"--help") usage ;;
        "") do_xcd "default" ;;
        *) do_xcd "$1" ;;
    esac
}

# FIXME: this is broken
complete -F do_complete xcd
